@model PeoplesSource.Ebay.Models.Message
@using Elmah.ContentSyndication
@using PeoplesSource.Helpers
@{
    ViewBag.Title = "Messages List";
    Layout = null;
    // var pageInfo = ViewData.Get<PageInfo>();
}


<div id="jqGrid_container" class="jqGrid">
    <table id="jQGridGroup"></table>
    <div id="jQGridGroupPager"></div>
</div>

<div id="listComment"></div>
<style>
    input.ui-pg-input {
        width: auto;
    }

    .ui-jqgrid-view {
        font-size: 11.5px !important;
    }

    div#gbox_jQGridGroup {
        border: 1px solid #aaaaaa !important;
    }

    .ui-jqgrid tr.jqgrow td {
        word-wrap: break-word;
        white-space: pre-wrap;
        white-space: -moz-pre-wrap;
     }

    .clsquantityunit {
        padding-left: 5px !important;
    }

    .paddingright {
        padding-left: 10px !important;
    }
</style>

<script type="text/javascript">


    $("#divLoading").show();
    //var mainGridPrefix = "s_";
    $(function () {


        $(window).bind('resize', function () {
            var width = $('#jqGrid_container').width();
            $('#jQGridGroup').setGridWidth(width);
        });


        $("#jQGridGroup").jqGrid({
            url: '@Url.Action("GetMessages", "EbayMessages", new { sellerId = Request.QueryString["sellerId"]})',
            datatype: "json",
            colNames: ['Sender', 'Receiver', 'Subject', 'Read', 'Received', 'Actions'],
            colModel: [

                {
                    name: 'Sender',
                    index: 'Sender',
                    width: 15,
                    stype: 'text',
                    formatter: function (cellvalue, options, rowObject) {
                        if (rowObject.Sender != null) {
                            var x = "<div style='padding-top:12px; padding-bottom:12px' class='paddingright'>" + rowObject.Sender;
                            x = x + "</div>";
                            return x;
                        }
                    },
                    sortable: true,
                    editable: false,
                    searchoptions: { sopt: ['cn', 'eq', 'ne', 'bw'] }
                },

                {
                    name: 'RecipientUserID',
                    index: 'RecipientUserID',
                    width: 15,
                    stype: 'text',
                    formatter: function (cellvalue, options, rowObject) {

                        if (rowObject.RecipientUserID != null && rowObject.RecipientUserID != undefined) {
                            var x = "<div style='padding-top:12px; padding-bottom:12px' class='paddingright'>" + rowObject.RecipientUserID;
                            x = x + "</div>";
                            return x;
                        }
                    },
                    sortable: true,
                    editable: false,
                    searchoptions: { sopt: ['cn', 'eq', 'ne', 'bw'] }
                },
                {
                    name: 'Subject',
                    index: 'Subject',
                    width: 25,
                    stype: 'text',
                    formatter: function (cellvalue, options, rowObject) {

                        if (rowObject.Subject != null) {
                            var x = "<div style='padding-top:12px; padding-bottom:12px' class='paddingright'>" + rowObject.Subject;
                            x = x + "</div>";
                            return x;
                        }
                    },
                    sortable: true,
                    editable: false,
                    searchoptions: { sopt: ['cn', 'eq', 'ne', 'bw'] }
                },
                {
                    name: 'Read',
                    index: 'Read',
                    width: 5,
                    stype: 'text',
                    formatter: function (cellvalue, options, rowObject) {

                        if (rowObject.Read != null) {
                            var x = "<div style='padding-top:12px; padding-bottom:12px' class='paddingright'>" + rowObject.Read;
                            x = x + "</div>";
                            return x;
                        }
                    },
                    sortable: true,
                    editable: false,
                    searchoptions: { sopt: ['cn', 'eq', 'ne', 'bw'] }
                },
                {
                    classes:'paddingright',
                    name: 'ReceiveDate',
                    index: 'ReceiveDate',
                    width: 9,
                    stype: 'date',
                    formatter: 'date',
                    sorttype: 'date',
                    datefmt: 'm/d/Y',
                    formatoptions: { srcformat: 'm/d/Y', newformat: 'd/m/Y' },                    
                    sortable: true,
                    editable: false,    
                    search: true,
                    searchoptions: { sopt: ['eq', 'ne'] }
                },
                {
                    name: 'MessageID',
                    index: 'MessageID',
                    width: 6,
                    stype: 'text',
                    formatter: function (cellvalue, options, rowObject) {

                        if (rowObject.MessageID != null) {
                            var x = "<div style='padding-left:5px; padding-top:12px; padding-bottom:12px'>" +
                                        "<a style='cursor: pointer;color:#1ab394;' onclick='ShowMessageDetails(" + @Request.QueryString["sellerId"] + "," + rowObject.ExternalMessageID + ");'><i class='fa fa-envelope fa-lg fa-fw' title='Show Message Details'></i></a><a style='cursor: pointer;color:#1ab394; margin-left:5px;' onclick='ShowMessageDetailsNewPages(" + @Request.QueryString["sellerId"] + "," + rowObject.ExternalMessageID + ");'><i class='fa fa-pencil-square-o fa-lg fa-fw' title='View Details'></i></a>" +
                                    "</div>";
                            return x.replace("Id", rowObject.MessageID);
                        }
                    },

                    sortable: false,
                    search: false,
                    editable: false,

                }
            ],
            rowNum: 10,
            mtype: 'GET',
            pager: '#jQGridGroupPager',
            loadonce: true,
            scroll: false,
            viewrecords: true,
            height: 500,
            autowidth: true,
            shrinkToFit: true,
            ignorecase: true,
            sortname: "ReceiveDate",
            sortorder: "desc",
            loadComplete: function () {
                if ($('#jQGridGroup').getGridParam('records') === 0) {
                    oldGrid = $('#jQGridGroup tbody').html();
                    $('#jQGridGroup tbody').html("<div style='padding:6px;background:#D8D8D8'>No records found</div>");
                }
                else
                    oldGrid = "";
                InitUI();
            }

        });        
    });
    function ShowMessageDetails(sellerId, messageId) {

        var dialog  = new   BootstrapDialog({
            title: 'Message Details',
            closeByBackdrop: false,
            closeByKeyboard: false,
            draggable: true,
            message: $('<div id="CustomizeDialog">Please Wait While Loading .............</div>'),
            onshow: function(dialogRef){
                var Page = $('<div></div>').load('@Url.Action("GetMessagesById", "EbayMessages")' + "?sellerId=" + sellerId + "&messageId=" + messageId,function(responseTxt, statusTxt, xhr){
                    if(statusTxt == 'success')
                    {
                        $('#CustomizeDialog').html(Page);
                    }
                })
            },
        });
        dialog.open();

    }
    function ShowMessageDetailsNewPages(sellerId, messageId) {
        window.open('@Url.Action("GetMessagesById", "EbayMessages")' + "?sellerId=" + sellerId + "&messageId=" + messageId,'_blank');
    }
</script>
